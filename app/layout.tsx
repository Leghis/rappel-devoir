import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Toaster } from "@/components/ui/toaster"
import emailjs from '@emailjs/browser';
import {initializeScheduler} from "@/app/services/scheduler";


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


emailjs.init(process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY!);

// Initialiser le scheduler au démarrage de l'application
if (process.env.NODE_ENV === 'production') {
  initializeScheduler()
      .then(() => console.log('Scheduler initialisé avec succès'))
      .catch(error => console.error('Erreur lors de l\'initialisation du scheduler:', error));
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        <Toaster />
      </body>
    </html>
  );
}
